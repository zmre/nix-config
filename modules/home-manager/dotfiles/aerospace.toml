# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = [
  'exec-and-forget open -a /Applications/WezTerm.app'
]

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
    # JankyBorders has a built-in detection of already running process,
    # so it won't be run twice on AeroSpace restart
    'exec-and-forget /etc/profiles/per-user/pwalsh/bin/borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=3.0',
  #'exec-and-forget sketchybar'
]
exec-on-workspace-change = ['/bin/bash', '-c',
  'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE PREV_WORKSPACE=$AEROSPACE_PREV_WORKSPACE'
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 150

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false

[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'
run = ['move-node-to-workspace M']

[[on-window-detected]]
if.app-id = 'com.apple.MobileSMS'
run = ['move-node-to-workspace M']

[[on-window-detected]]
if.app-id = 'org.whispersystems.signal-desktop'
run = ['move-node-to-workspace M']

[[on-window-detected]]
if.app-id = 'com.apple.Music'
# Floating music because of weirdness with it flashing onto current workspace otherwise
run = ['layout floating', 'move-node-to-workspace S']

[[on-window-detected]]
if.app-id = 'com.spotify.client'
run = ['move-node-to-workspace S']

[[on-window-detected]]
if.app-id = 'com.github.wez.wezterm'
run = ['move-node-to-workspace W']

[[on-window-detected]]
if.app-id = 'com.apple.mail'
run = ['move-node-to-workspace E']

[[on-window-detected]]
if.app-id = 'ch.protonmail.desktop'
run = ['move-node-to-workspace E']


[[on-window-detected]]
#if.app-id = 'com.apple.Safari.WebApp.84F3CEBB-0D52-47F1-AC17-24917E18D08B' # gmail - might need to do app name on this
if.app-name-regex-substring = 'Gmail'
run = ['move-node-to-workspace E']

[[on-window-detected]]
if.app-id = 'com.apple.Safari'
run = ['move-node-to-workspace B']


[[on-window-detected]]
if.app-id = 'com.kagi.kagimacOS'
run = ['move-node-to-workspace B']

[[on-window-detected]]
if.app-id = 'com.apple.iCal'
run = ['move-node-to-workspace D']

[[on-window-detected]]
if.app-id = 'com.flexibits.fantastical2.mac'
run = ['move-node-to-workspace D']

[[on-window-detected]]
if.app-id = 'com.apple.reminders'
run = ['move-node-to-workspace D']

[[on-window-detected]]
if.app-id = 'com.adobe.LightroomClassicCC7'
run = ['move-node-to-workspace P']

[[on-window-detected]]
if.app-id = 'com.apple.Photos'
run = ['move-node-to-workspace P']

[[on-window-detected]]
if.app-id = '85C27NK92C.com.flexibits.fantastical2.mac.helper'
run = ['layout floating']

[[on-window-detected]]
if.app-name-regex-substring = 'BlockBlock Alert'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.kapeli.dashdoc'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.markmcguill.strongbox.mac'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.mitchellh.ghostty'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'io.freetubeapp.freetube'
run = ['move-node-to-workspace Y']

[[on-window-detected]]
if.app-id = 'co.noteplan.NotePlan3'
run = ['move-node-to-workspace N']

[[on-window-detected]]
if.app-id = 'com.neovide.neovide'
run = ['move-node-to-workspace N']

[[on-window-detected]]
if.app-id = 'us.zoom.xos'
run = ['move-node-to-workspace V']

[[on-window-detected]]
if.app-id = 'Cisco-Systems.Spark' # webex
run = ['move-node-to-workspace V']


# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 4
inner.vertical =   4
outer.left =       4
outer.bottom =     4
outer.top =        4
outer.right =      4

[workspace-to-monitor-force-assignment]
# plugged in
# 1 | LG Ultra HD          (secondary left)
# 2 | LG UltraFine         (main central)
# 3 | RODE_RCV             (tertiary right)
# not plugged in
# 1 | Built-in Retina Display

B = ['LG Ultra HD', 'built-in'] # browser to big vertical secondary monitor
Y = ['LG Ultra HD', 'built-in'] # youtube to big vertical secondary monitor
V = ['RODE_RCV', 'built-in']    # video meetings to teleprompter


# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors left'
alt-j = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors down'
alt-k = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors up'
alt-l = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

alt-f = 'fullscreen'
alt-t = 'layout floating tiling'

alt-ctrl-h = ['join-with left']
alt-ctrl-j = ['join-with down']
alt-ctrl-k = ['join-with up']
alt-ctrl-l = ['join-with right']

# https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-ctrl-n = 'exec-and-forget aerospace list-workspaces --monitor focused --empty no | aerospace workspace --wrap-around next' # next occupied space on current monitor
alt-ctrl-p = 'exec-and-forget aerospace list-workspaces --monitor focused --empty no | aerospace workspace --wrap-around prev' # prev occupied space on current monitor
alt-ctrl-shift-n = ['workspace --wrap-around next'] # next space -- any monitor and occupied or unoccupied
alt-ctrl-shift-p = ['workspace --wrap-around prev'] # prev space -- any monitor and occupied or unoccupied

# plugged in
# 1 | LG Ultra HD          (secondary left)
# 2 | LG UltraFine         (main central)
# 3 | RODE_RCV             (tertiary right)
# not plugged in
# 1 | Built-in Retina Display
alt-z = 'focus-monitor 1'
alt-x = 'focus-monitor 2'
alt-c = 'focus-monitor 3'
alt-shift-z = 'move-node-to-monitor --focus-follows-window 1'
alt-shift-x = 'move-node-to-monitor --focus-follows-window 2'
alt-shift-c = 'move-node-to-monitor --focus-follows-window 3'

# move-workspace-to-monitor is crappy -- can only specify next/prev and not specific monitors
# we'll just use z/c to mean prev/next
# also can't move focus with the workspace
alt-ctrl-z = 'move-workspace-to-monitor --wrap-around prev'
#alt-ctrl-x = 'move-workspace-to-monitor 2'
alt-ctrl-c = 'move-workspace-to-monitor --wrap-around next'

# full reset
alt-shift-r = ['reload-config', 'flatten-workspace-tree']

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-1 = 'workspace 1'
alt-2 = 'workspace 2'
alt-3 = 'workspace 3'
alt-4 = 'workspace 4'
alt-5 = 'workspace 5'
alt-6 = 'workspace 6'
alt-7 = 'workspace 7'
alt-8 = 'workspace 8'
alt-9 = 'workspace 9'
alt-a = 'workspace A' 
alt-b = 'workspace B' # browsers excluding brave
alt-d = 'workspace D' # "day": calendar and reminders
alt-e = 'workspace E' # email apps
alt-g = 'workspace G'
alt-i = 'workspace I'
alt-m = 'workspace M' # message apps like signal, slack, and messages
alt-n = 'workspace N' # notes excluding the ghostty popup notes
alt-o = 'workspace O'
alt-p = 'workspace P' # photo apps
alt-q = 'workspace Q'
alt-s = 'workspace S' # music/spotify
alt-u = 'workspace U'
alt-v = 'workspace V' # video meetings (except won't pin brave)
alt-w = 'workspace W' # wezterm
alt-y = 'workspace Y' # youtube

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-1 = 'move-node-to-workspace --focus-follows-window 1'
alt-shift-2 = 'move-node-to-workspace --focus-follows-window 2'
alt-shift-3 = 'move-node-to-workspace --focus-follows-window 3'
alt-shift-4 = 'move-node-to-workspace --focus-follows-window 4'
alt-shift-5 = 'move-node-to-workspace --focus-follows-window 5'
alt-shift-6 = 'move-node-to-workspace --focus-follows-window 6'
alt-shift-7 = 'move-node-to-workspace --focus-follows-window 7'
alt-shift-8 = 'move-node-to-workspace --focus-follows-window 8'
alt-shift-9 = 'move-node-to-workspace --focus-follows-window 9'
alt-shift-a = 'move-node-to-workspace --focus-follows-window A'
alt-shift-b = 'move-node-to-workspace --focus-follows-window B' # browsers excluding brave
alt-shift-d = 'move-node-to-workspace --focus-follows-window D' # "day": calendar and reminders
alt-shift-e = 'move-node-to-workspace --focus-follows-window E' # email apps
alt-shift-g = 'move-node-to-workspace --focus-follows-window G'
alt-shift-i = 'move-node-to-workspace --focus-follows-window I'
alt-shift-m = 'move-node-to-workspace --focus-follows-window M' # message apps like signal, slack, and messages
alt-shift-n = 'move-node-to-workspace --focus-follows-window N' # notes excluding the ghostty popup notes
alt-shift-o = 'move-node-to-workspace --focus-follows-window O'
alt-shift-p = 'move-node-to-workspace --focus-follows-window P' # photo apps
alt-shift-q = 'move-node-to-workspace --focus-follows-window Q'
alt-shift-s = 'move-node-to-workspace --focus-follows-window S' # music/spotify
alt-shift-u = 'move-node-to-workspace --focus-follows-window U'
alt-shift-v = 'move-node-to-workspace --focus-follows-window V'
alt-shift-w = 'move-node-to-workspace --focus-follows-window W' # wezterm
alt-shift-y = 'move-node-to-workspace --focus-follows-window Y' # youtube

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'
alt-r = 'mode resize'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
#f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

## launchers
y = ['exec-and-forget open -a /Applications/Ghostty.app -n --args -e yazi', 'mode main']
n = ['exec-and-forget open -a /Applications/Ghostty.app -n --args -e nvim', 'mode main']
f = ["exec-and-forget osascript -e 'tell application \"Finder\" to make new Finder window'", 'mode main']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

down = 'volume down'
up = 'volume up'
shift-down = ['volume set 0', 'mode main']


[mode.resize.binding]
h = 'resize width -50'
j = 'resize height +50'
k = 'resize height -50'
l = 'resize width +50'
enter = 'mode main'
esc = 'mode main'

[exec.env-vars]
PATH = '/run/current-system/sw/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/Users/pwalsh/.nix-profile/bin:/etc/profiles/per-user/pwalsh/bin:/nix/var/nix/profiles/default/bin:/usr/local/bin:/usr/bin:/usr/sbin:/bin:/sbin'

