# Copy-paste integration
# According to https://unix.stackexchange.com/questions/589319/tmux-copy-is-slow-on-macos
# reattach-to-user-namespace is no longer needed
#set-option -g default-command "reattach-to-user-namespace -l zsh"
set -s set-clipboard on

set-option -g focus-events on

# Use vim keybindings
setw -g mode-keys vi
set -g status-keys vi

bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down
# Setup 'v' to begin selection as in Vim
unbind-key -T copy-mode-vi Space     ;   bind-key -T copy-mode-vi v send-keys -X begin-selection
#unbind-key -T copy-mode-vi Enter     ;   bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind-key -T copy-mode-vi C-v       ;   bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
unbind-key -T copy-mode-vi [         ;   bind-key -T copy-mode-vi [ send-keys -X begin-selection
unbind-key -T copy-mode-vi ]         ;   bind-key -T copy-mode-vi ] send-keys -X copy-selection

# Bind ']' to use pbpaste
#bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# Global settings

# join windows to panes
bind-key j join-pane -s !
bind-key S choose-window 'join-pane -v -s "%%"'
bind-key V choose-window 'join-pane -h -s "%%"'

# scrollback buffer n lines
set -g history-limit 10000

# listen for activity on all windows
set -g bell-action any
setw -g monitor-activity on
#set -g bell-action none

# start window indexing at zero (default)
set -g base-index 0


# xterm-style function key sequences
setw -g xterm-keys on

# control automatic window renaming
setw -g automatic-rename on

# enable wm window titles
set -g set-titles on

# wm window title string (uses statusbar variables)
# set -g set-titles-string "tmux.#I.#W"
set -g set-titles-string "[#S]#I|#W"

# Key bindings

# reload settings
bind-key R source-file ~/.tmux.conf

# Allow clear screen with c-b, c-l
bind C-l send-keys 'C-l';

# navigate panes using jk, and ctrl+jk (no prefix)
bind-key -r j select-pane -t :.-
bind-key -r k select-pane -t :.+
#bind-key -n -r C-j select-pane -t :.-
#bind-key -n -r C-k select-pane -t :.+

# navigate windows using hl, and ctrl-hl (no prefix)
bind-key -r h select-window -t :-
bind-key -r l select-window -t :+
#bind-key -n -r C-h select-window -t :-
#bind-key -n -r C-l select-window -t :+

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
        | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
        bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
        bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
        bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
        bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
        tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
        if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
            "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
            if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
                "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

                bind-key -T copy-mode-vi 'C-h' select-pane -L
                bind-key -T copy-mode-vi 'C-j' select-pane -D
                bind-key -T copy-mode-vi 'C-k' select-pane -U
                bind-key -T copy-mode-vi 'C-l' select-pane -R
                bind-key -T copy-mode-vi 'C-\' select-pane -l

# keybindings to make resizing easier
                bind -r Left resize-pane -L
                bind -r Down resize-pane -D
                bind -r Up resize-pane -U
                bind -r Right resize-pane -R

# kill current pane/window
# q is the default choose-pane key. just use x instead.
#bind-key q confirm-before kill-pane
                bind-key Q confirm-before kill-window


# enable mouse selection in copy mode
                set -g mouse on

# title (default key in tmux is ',')
                bind-key A command-prompt "rename-window %%"

# displays
                bind-key * list-clients

# redisplay
                bind-key r refresh-client

                bind-key C new-session

# Split windows like vim

# use better mnemonics for horizontal/vertical splits
                bind-key - split-window -v
                bind-key _ split-window -v
                bind-key | split-window -h

                set -g display-time 2000

                set-option -g status on
                set-option -g status-interval 2
                set-option -g status-justify "centre"
                set-option -g status-left-length 60
                set-option -g status-right-length 90
                set-option -g status-style "fg=white,bg=black"
                set-option -g status-left "#(~/.tmux/tmux-powerline/powerline.sh left)"
                set-option -g status-right "#(~/.tmux/tmux-powerline/powerline.sh right)"

                set-window-option -g window-status-current-format "#{?window_active,#[fg=brightyellow][#[fg=yellow]*,}#I:#W#{?window_active,#[fg=brightyellow]],}"

# tmux waits a sec after you hit escape to see if a key sequence is coming
# through. this is very annoying in vim and bash vim mode. make it zero and
# profit.
                set -s escape-time 0

#set -g default-terminal "${TERM}"
# tell tmux to use 256 colour terminal
#set -g default-terminal "screen-256color"
#set -g default-terminal "alacritty"
                set-option -sa terminal-overrides ',alacritty:RGB'
                set-option -g default-terminal "alacritty"
                set -g default-terminal "alacritty"
#set-option -g default-terminal "screen-256color"
#set -g default-terminal "screen-256color"
# Get undercurl working in tmux
                set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
                set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# List of plugins
                set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'tmux-plugins/tmux-sensible'
# ctrl-b,ctrl-s to save session, ctrl-b,ctrl-r to restore
                set -g @plugin 'tmux-plugins/tmux-resurrect'
# o after selection to open file or url, ctlr-o to open in vim
                set -g @plugin 'tmux-plugins/tmux-open'
                set -g @plugin 'wfxr/tmux-fzf-url'
# and shift-s to search in duckduckgo
                set -g @open-S 'https://www.duckduckgo.com/'

                set -g @resurrect-processes ':all:'
                set -g @resurrect-capture-pane-contents 'on'
# when looking back in a buffer for URLs, go back X lines;
# default is just the number of lines visible on the screen
# one screen is probably around 45 lines
# I will default to about 4 screenfuls
                set -g @fzf-url-history-limit '200'


# Initialize TMUX plugin manager (keep this line at the very bottom of
# tmux.conf)
#run '~/.tmux/plugins/tpm/tpm'

# -----------------------------------------------------------------------------
# vim: fen fdl=0 fdm=marker
